{"version":3,"file":"static/js/477.801e1361.chunk.js","mappings":"oMAEe,SAASA,EAAT,GAA+B,IAAVC,EAAS,EAATA,MAC5BC,GAAWC,EAAAA,EAAAA,MACjB,OACE,wBACGF,EAAMG,KAAI,SAAAC,GAAI,OACb,yBACE,UAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAAEC,KAAMP,GAA/C,WACE,gBACEQ,IAAG,yCAAoCL,EAAKM,aAC5CC,IAAI,GACJC,MAAO,MAERR,EAAKS,gBAAkBT,EAAKU,SAPxBV,EAAKE,GADD,KAcpB,C,+LClBKS,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,qCAA2CL,IAD7D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BhB,GAA5B,yFACkBU,EAASI,IAAT,iBACXd,EADW,oBACGS,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeE,EAAtB,+CAAO,OAAP,oBAAO,WAAuBjB,GAAvB,yFACkBU,EAASI,IAAT,iBACXd,EADW,4BACWS,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA0BlB,GAA1B,yFACkBU,EAASI,IAAT,iBACXd,EADW,4BACWS,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBV,EAASI,IAAT,gCACIL,EADJ,4DAC2DW,IAF7E,uBACGL,EADH,EACGA,KADH,kBAIEA,GAJF,kE,uJC7BQ,SAASM,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAO5B,EAAP,KAAc6B,EAAd,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACA,GAA4BL,EAAAA,EAAAA,UAAS,IAArC,eAAOM,EAAP,KAAeC,EAAf,KACA,GAAsCC,EAAAA,EAAAA,MAAtC,eAAOC,EAAP,KAAoBC,EAApB,KAEMZ,EAAQW,EAAYjB,IAAI,UAE9BmB,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAiB,mCAAG,2FACxBT,GAAW,GADa,mBAGDN,EAAAA,EAAAA,IAAgBC,GAHf,OAGhBe,EAHgB,OAItBC,QAAQC,IAAIF,GACZZ,EAASY,EAAOG,SALM,gDAOtBX,EAAS,EAAD,IAPc,yBAStBF,GAAW,GATW,4EAAH,qDAYnBL,GACFc,GAEH,GAAE,CAACP,EAAUJ,EAAUE,EAAYL,IAYpC,OACE,iCACE,kBAAMmB,SARW,SAAAC,GACnBA,EAAEC,iBACFT,EAAe,CAAEU,MAAOd,IACxBC,EAAU,GACX,EAIG,WACE,uCAEE,kBAAOrB,KAAK,SAASY,MAAOQ,EAAQe,SAfvB,SAAAH,GACnBX,EAAUW,EAAEI,OAAOxB,MACpB,QAeK,mBAAQyB,KAAK,SAAb,wBAEF,SAACpD,EAAA,EAAD,CAAWC,MAAOA,IACjB8B,IAAW,wCACXE,IAAS,qCAAaA,EAAMoB,aAGlC,CCtDc,SAASC,IACtB,OAAO,SAAC1B,EAAD,GACR,C","sources":["components/modules/ListItems/ListItems.jsx","components/modules/shared/api/movies.js","components/modules/MoviesSearch/MoviesSearch.jsx","components/pages/MoviesPage/MoviesPage.jsx"],"sourcesContent":["import { Link, useLocation } from 'react-router-dom';\n\nexport default function ListItems({ items }) {\n  const location = useLocation();\n  return (\n    <ul>\n      {items.map(item => (\n        <li key={item.id}>\n          <Link to={`/movies/${item.id}`} state={{ from: location }}>\n            <img\n              src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n              alt=\"\"\n              width={100}\n            />\n            {item.original_title || item.name}\n          </Link>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","import axios from 'axios';\n\nconst KEY = '0a221be11a4630df713925aec9466cbd';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/all/week?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieItem(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getSearchMovies(value) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n  return data;\n}\n","import { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport ListItems from '../ListItems/ListItems';\nimport { getSearchMovies } from '../shared/api/movies';\n\nexport default function MoviesSearch() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const [search, setSearch] = useState('');\n  const [valueParams, setValueParams] = useSearchParams();\n\n  const value = valueParams.get('query');\n\n  useEffect(() => {\n    const fetchSearchMovies = async () => {\n      setLoading(true);\n      try {\n        const result = await getSearchMovies(value);\n        console.log(result);\n        setItems(result.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    if (value) {\n      fetchSearchMovies();\n    }\n  }, [setError, setItems, setLoading, value]);\n\n  const handleChange = e => {\n    setSearch(e.target.value);\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    setValueParams({ query: search });\n    setSearch('');\n  };\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n        <label>\n          Search\n          <input name=\"search\" value={search} onChange={handleChange}></input>\n        </label>\n        <button type=\"submit\">search</button>\n      </form>\n      <ListItems items={items} />\n      {loading && <p>Loading ....</p>}\n      {error && <p>Fail ....{error.message}</p>}\n    </>\n  );\n}\n","import MoviesSearch from 'components/modules/MoviesSearch/MoviesSearch';\n\nexport default function MoviesPage() {\n  return <MoviesSearch />;\n}\n"],"names":["ListItems","items","location","useLocation","map","item","to","id","state","from","src","poster_path","alt","width","original_title","name","KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieItem","getCast","getReviews","getSearchMovies","value","MoviesSearch","useState","setItems","loading","setLoading","error","setError","search","setSearch","useSearchParams","valueParams","setValueParams","useEffect","fetchSearchMovies","result","console","log","results","onSubmit","e","preventDefault","query","onChange","target","type","message","MoviesPage"],"sourceRoot":""}