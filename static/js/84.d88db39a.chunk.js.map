{"version":3,"file":"static/js/84.d88db39a.chunk.js","mappings":"8SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,qCAA2CL,IAD7D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,qICjCP,EAA4B,+BAA5B,EAAkE,0B,kBCKnD,SAASO,IACtB,OAA0BC,EAAAA,EAAAA,UAAS,IAAnC,eAAOC,EAAP,KAAcC,EAAd,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,OAEfC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,2FACnBN,GAAW,GADQ,mBAGIR,EAAAA,EAAAA,IAAWW,EAAOb,IAHtB,OAGXiB,EAHW,OAIjBT,EAASS,EAAOC,SAJC,gDAMjBN,EAAS,EAAD,IANS,yBAQjBF,GAAW,GARM,4EAAH,qDAWlBM,GACD,GAAE,CAACH,EAAOb,GAAIY,EAAUJ,EAAUE,IAEnC,IAAMS,EAAWZ,EAAMa,KAAI,SAAAC,GAAI,OAC7B,gBAAkBC,UAAWC,EAA7B,WACE,2BACE,sCACCF,EAAKG,WAER,uBAAIH,EAAKI,YALFJ,EAAKrB,GADe,IAS/B,OACE,gCACGO,EAAMmB,OAAS,GACd,eAAIJ,UAAWC,EAAf,SAAkCJ,KAElC,2CAEDV,IAAW,SAAC,KAAD,IACXE,IAAS,qCAAaA,EAAMgB,aAGlC,C","sources":["components/modules/shared/api/movies.js","webpack://react-homework-template/./src/components/pages/ReviewsPage/ReviewsPage.module.scss?c505","components/pages/ReviewsPage/ReviewsPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0a221be11a4630df713925aec9466cbd';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/all/week?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieItem(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getSearchMovies(value) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"listItems\":\"ReviewsPage_listItems__wIrjq\",\"item\":\"ReviewsPage_item__PUu+L\"};","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'components/modules/shared/api/movies';\nimport styles from './ReviewsPage.module.scss';\nimport { Audio } from 'react-loader-spinner';\n\nexport default function ReviewsPage() {\n  const [items, setItems] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const params = useParams();\n\n  useEffect(() => {\n    const fetchReviews = async () => {\n      setLoading(true);\n      try {\n        const result = await getReviews(params.id);\n        setItems(result.results);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchReviews();\n  }, [params.id, setError, setItems, setLoading]);\n\n  const elements = items.map(item => (\n    <li key={item.id} className={styles.item}>\n      <h2>\n        <span>Author:</span>\n        {item.author}\n      </h2>\n      <p>{item.content}</p>\n    </li>\n  ));\n  return (\n    <>\n      {items.length > 0 ? (\n        <ul className={styles.listItems}>{elements}</ul>\n      ) : (\n        <p>No found review</p>\n      )}\n      {loading && <Audio />}\n      {error && <p>Fail ....{error.message}</p>}\n    </>\n  );\n}\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieItem","id","getCast","getReviews","getSearchMovies","value","ReviewsPage","useState","items","setItems","loading","setLoading","error","setError","params","useParams","useEffect","fetchReviews","result","results","elements","map","item","className","styles","author","content","length","message"],"sourceRoot":""}