{"version":3,"file":"static/js/340.5f192169.chunk.js","mappings":"+SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,qCAA2CL,IAD7D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,uJCxBQ,SAASO,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MAETC,GADSC,EAAAA,EAAAA,MACSC,MAAlBF,KAqBR,OAfAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBX,GAAW,GADU,mBAGEX,EAAAA,EAAAA,IAAac,EAAOb,IAHtB,OAGbsB,EAHa,OAInBd,EAAQc,GAJW,gDAMnBV,EAAS,EAAD,IANW,yBAQnBF,GAAW,GARQ,4EAAH,qDAWpBW,GACD,GAAE,CAACR,EAAOb,MAGT,iCACE,mBAAQuB,QArBZ,WACER,EAASE,EACV,EAmBG,sBACA,4BACE,gBACEO,IAAG,yCAAoCjB,EAAKkB,aAC5CC,IAAI,MAEN,wBAAKnB,EAAKoB,gBAAkBpB,EAAKqB,QACjC,uCAAerB,EAAKsB,aACpB,yBAAMtB,EAAKuB,QAAUvB,EAAKuB,OAAOC,KAAI,SAAAC,GAAG,OAAIA,EAAIJ,IAAR,SAEzCnB,IAAW,wCACXE,IAAS,qCAAaA,EAAMsB,YAC7B,SAAC,KAAD,CAAMd,MAAO,CAAEF,KAAAA,GAAQiB,GAAE,kBAAa3B,EAAKP,GAAlB,SAAzB,mBAGA,SAAC,KAAD,CAAMmB,MAAO,CAAEF,KAAAA,GAAQiB,GAAE,kBAAa3B,EAAKP,GAAlB,YAAzB,sBAGA,SAAC,KAAD,MAGL,C","sources":["components/modules/shared/api/movies.js","components/pages/MovieItemPage/MovieItemPage.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0a221be11a4630df713925aec9466cbd';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/all/week?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieItem(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getSearchMovies(value) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n  return data;\n}\n","import { getMovieItem } from '../../modules/shared/api/movies';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect } from 'react';\n\nexport default function MovieItemPage() {\n  const [item, setItem] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const params = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { from } = location.state;\n\n  function goBack() {\n    navigate(from);\n  }\n\n  useEffect(() => {\n    const fetchMovieItem = async () => {\n      setLoading(true);\n      try {\n        const result = await getMovieItem(params.id);\n        setItem(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieItem();\n  }, [params.id]);\n\n  return (\n    <>\n      <button onClick={goBack}>Go back</button>\n      <div>\n        <img\n          src={`https://image.tmdb.org/t/p/w500${item.poster_path}`}\n          alt=\"\"\n        />\n        <h2>{item.original_title || item.name}</h2>\n        <div>Overview:{item.overview}</div>\n        <div>{item.genres && item.genres.map(gen => gen.name)}</div>\n      </div>\n      {loading && <p>Loading ....</p>}\n      {error && <p>Fail ....{error.message}</p>}\n      <Link state={{ from }} to={`/movies/${item.id}/cast`}>\n        Cast\n      </Link>\n      <Link state={{ from }} to={`/movies/${item.id}/reviews`}>\n        Reviews\n      </Link>\n      <Outlet />\n    </>\n  );\n}\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieItem","id","getCast","getReviews","getSearchMovies","value","MovieItemPage","useState","item","setItem","loading","setLoading","error","setError","params","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieItem","result","onClick","src","poster_path","alt","original_title","name","overview","genres","map","gen","message","to"],"sourceRoot":""}