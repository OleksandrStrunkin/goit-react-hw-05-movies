{"version":3,"file":"static/js/889.6f59df23.chunk.js","mappings":"+SAEMA,EAAM,mCAENC,EAAWC,EAAAA,EAAAA,OAAa,CAC5BC,QAAQ,iCAGH,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,sGACkBH,EAASI,IAAT,qCAA2CL,IAD7D,uBACGM,EADH,EACGA,KADH,kBAEEA,GAFF,kEAKA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA4BC,GAA5B,yFACkBP,EAASI,IAAT,iBACXG,EADW,oBACGR,EADH,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAuBD,GAAvB,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,oBADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeI,EAAtB,+CAAO,OAAP,oBAAO,WAA0BF,GAA1B,yFACkBP,EAASI,IAAT,iBACXG,EADW,4BACWR,EADX,2BADlB,uBACGM,EADH,EACGA,KADH,kBAIEA,GAJF,kEAOA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA+BC,GAA/B,yFACkBX,EAASI,IAAT,gCACIL,EADJ,4DAC2DY,IAF7E,uBACGN,EADH,EACGA,KADH,kBAIEA,GAJF,kE,8ICjCP,EAA2B,gCAA3B,EAAoE,8BAApE,EAA0G,6BAA1G,EAAqJ,mCAArJ,EAA+L,4BAA/L,EAAkO,4BAAlO,EAAoQ,2BAApQ,EAAwS,8BAAxS,EAA+U,8B,2BCahU,SAASO,IACtB,OAAwBC,EAAAA,EAAAA,UAAS,CAAC,GAAlC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA8BF,EAAAA,EAAAA,WAAS,GAAvC,eAAOG,EAAP,KAAgBC,EAAhB,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMC,GAASC,EAAAA,EAAAA,MAETC,GAAWC,EAAAA,EAAAA,MAETC,GADSC,EAAAA,EAAAA,MACSC,MAAlBF,MAMRG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,2FACrBX,GAAW,GADU,mBAGEX,EAAAA,EAAAA,IAAac,EAAOb,IAHtB,OAGbsB,EAHa,OAInBd,EAAQc,GAJW,gDAMnBV,EAAS,EAAD,IANW,yBAQnBF,GAAW,GARQ,4EAAH,qDAWpBW,GACD,GAAE,CAACR,EAAOb,KAEX,IAAMuB,EAAOhB,EAAKiB,aAElB,OACE,iCACE,mBAAQC,QAvBZ,WACEV,EAASE,EACV,EAqB4BS,UAAWC,EAApC,sBAGA,iBAAKD,UAAWC,EAAhB,UACGpB,EAAKqB,aACJ,gBACEC,IAAK,yCAAkCtB,EAAKqB,cAAiBE,EAC7DC,IAAKxB,EAAKyB,gBAAkBzB,EAAK0B,KACjCC,MAAO,IACPR,UAAWC,KAGb,gBACEE,IAAKC,EACLC,IAAKxB,EAAKyB,gBAAkBzB,EAAK0B,KACjCC,MAAO,IACPR,UAAWC,KAGf,4BACE,gBAAID,UAAWC,EAAf,UACGpB,EAAKyB,gBAAkBzB,EAAK0B,KAC5BV,EAAI,WAAOA,EAAKY,MAAM,EAAG,GAArB,KAA6B,OAEpC,uCACc,IACX5B,EAAK6B,cAAoC,GAApB7B,EAAK6B,cAAmBC,QAAQ,GAAK,GAF7D,QAIA,eAAIX,UAAWC,EAAf,uBACA,cAAGD,UAAWC,EAAd,SAA4BpB,EAAK+B,YACjC,eAAIZ,UAAWC,EAAf,qBACA,cAAGD,UAAWC,EAAd,SACGpB,EAAKgC,QACJhC,EAAKgC,OAAOC,KAAI,SAAAC,GAAG,OACjB,iBAAqBf,UAAWC,EAAhC,SACGc,EAAIR,MC/DH,eAACS,EAAD,uDAAQ,GAAR,OAClBC,OAAOC,gBAAgB,IAAIC,WAAWH,IAAOI,QAAO,SAAC9C,EAAI+C,GAWvD,OARE/C,IAFF+C,GAAQ,IACG,GACHA,EAAKC,SAAS,IACXD,EAAO,IACTA,EAAO,IAAIC,SAAS,IAAIC,cACtBF,EAAO,GACV,IAEA,IAGT,GAAE,GAbe,CD8DOG,GADM,YAQ1BzC,IAAW,SAAC,KAAD,IACXE,IAAS,qCAAaA,EAAMwC,YAC7B,cAAGzB,UAAWC,EAAd,qCACA,UAAC,EAAAyB,SAAD,YACE,iBAAK1B,UAAWC,EAAhB,WACE,SAAC,KAAD,CACER,MAAO,CAAEF,KAAAA,GACToC,GAAE,kBAAa9C,EAAKP,GAAlB,SACF0B,UAAWC,EAHb,mBAOA,SAAC,KAAD,CACER,MAAO,CAAEF,KAAAA,GACToC,GAAE,kBAAa9C,EAAKP,GAAlB,YACF0B,UAAWC,EAHb,yBAQF,SAAC,KAAD,SAIP,C","sources":["components/modules/shared/api/movies.js","webpack://react-homework-template/./src/components/pages/MovieItemPage/MovieItemPage.module.scss?4705","components/pages/MovieItemPage/MovieItemPage.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["import axios from 'axios';\n\nconst KEY = '0a221be11a4630df713925aec9466cbd';\n\nconst instance = axios.create({\n  baseURL: `https://api.themoviedb.org/3`,\n});\n\nexport async function getMoviesList() {\n  const { data } = await instance.get(`/trending/all/week?api_key=${KEY}`);\n  return data;\n}\n\nexport async function getMovieItem(id) {\n  const { data } = await instance.get(\n    `/movie/${id}?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getCast(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/credits?api_key=${KEY}&language=en-US`\n  );\n  return data;\n}\n\nexport async function getReviews(id) {\n  const { data } = await instance.get(\n    `/movie/${id}/reviews?api_key=${KEY}&language=en-US&page=1`\n  );\n  return data;\n}\n\nexport async function getSearchMovies(value) {\n  const { data } = await instance.get(\n    `/search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${value}`\n  );\n  return data;\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"movieBox\":\"MovieItemPage_movieBox__0KQp7\",\"poster\":\"MovieItemPage_poster__LlJ77\",\"title\":\"MovieItemPage_title__7OZLm\",\"discription\":\"MovieItemPage_discription__Fagws\",\"info\":\"MovieItemPage_info__ED14C\",\"text\":\"MovieItemPage_text__pPXDn\",\"gen\":\"MovieItemPage_gen__d6qYv\",\"boxBtn\":\"MovieItemPage_boxBtn__WBx8T\",\"button\":\"MovieItemPage_button__F-nJe\"};","import { getMovieItem } from '../../modules/shared/api/movies';\nimport { nanoid } from 'nanoid';\nimport {\n  Link,\n  useParams,\n  Outlet,\n  useNavigate,\n  useLocation,\n} from 'react-router-dom';\nimport { useState, useEffect, Suspense } from 'react';\nimport styles from './MovieItemPage.module.scss';\nimport photo from '../NoFoundPage/notFound.jpg';\nimport { Audio } from 'react-loader-spinner';\n\nexport default function MovieItemPage() {\n  const [item, setItem] = useState({});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(null);\n  const params = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n  const { from } = location.state;\n\n  function goBack() {\n    navigate(from);\n  }\n\n  useEffect(() => {\n    const fetchMovieItem = async () => {\n      setLoading(true);\n      try {\n        const result = await getMovieItem(params.id);\n        setItem(result);\n      } catch (error) {\n        setError(error);\n      } finally {\n        setLoading(false);\n      }\n    };\n    fetchMovieItem();\n  }, [params.id]);\n\n  const date = item.release_date;\n\n  return (\n    <>\n      <button onClick={goBack} className={styles.button}>\n        Go back\n      </button>\n      <div className={styles.movieBox}>\n        {item.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w500${item.poster_path}` || photo}\n            alt={item.original_title || item.name}\n            width={400}\n            className={styles.poster}\n          />\n        ) : (\n          <img\n            src={photo}\n            alt={item.original_title || item.name}\n            width={400}\n            className={styles.poster}\n          />\n        )}\n        <div>\n          <h2 className={styles.title}>\n            {item.original_title || item.name}\n            {date ? `(${date.slice(0, 4)})` : ''}\n          </h2>\n          <p>\n            User Score:{' '}\n            {item.vote_average ? (item.vote_average * 10).toFixed(0) : ''}%\n          </p>\n          <h3 className={styles.discription}>Overview</h3>\n          <p className={styles.text}>{item.overview}</p>\n          <h3 className={styles.discription}>Genres</h3>\n          <p className={styles.text}>\n            {item.genres &&\n              item.genres.map(gen => (\n                <span key={nanoid()} className={styles.gen}>\n                  {gen.name}\n                </span>\n              ))}\n          </p>\n        </div>\n      </div>\n      {loading && <Audio />}\n      {error && <p>Fail ....{error.message}</p>}\n      <p className={styles.info}>Additional information</p>\n      <Suspense>\n        <div className={styles.boxBtn}>\n          <Link\n            state={{ from }}\n            to={`/movies/${item.id}/cast`}\n            className={styles.button}\n          >\n            Cast\n          </Link>\n          <Link\n            state={{ from }}\n            to={`/movies/${item.id}/reviews`}\n            className={styles.button}\n          >\n            Reviews\n          </Link>\n        </div>\n        <Outlet />\n      </Suspense>\n    </>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["KEY","instance","axios","baseURL","getMoviesList","get","data","getMovieItem","id","getCast","getReviews","getSearchMovies","value","MovieItemPage","useState","item","setItem","loading","setLoading","error","setError","params","useParams","navigate","useNavigate","from","useLocation","state","useEffect","fetchMovieItem","result","date","release_date","onClick","className","styles","poster_path","src","photo","alt","original_title","name","width","slice","vote_average","toFixed","overview","genres","map","gen","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","message","Suspense","to"],"sourceRoot":""}